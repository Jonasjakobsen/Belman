/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.produktion;

import BE.BELager;
import BE.BEProduktion;
import BLL.BLLLagerManager;
import BLL.BLLProduktionManager;
import com.microsoft.sqlserver.jdbc.SQLServerException;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLException;
import java.util.Date;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Christoffer
 */
public class ProduktionForm extends javax.swing.JFrame implements Observer
{

    private BLLProduktionManager promgr;
    private BLLLagerManager lagmgr;
//    private BLLSleeveManager slmgr;
//    private BLLStockItemManager stmgr;
//    private BLLMaterialeManager mmgr;
    private ProduktionFormTableModel promodel;
    private SortOrdreTableModel sortmodel;
    private LagerTableModel lagmodel;
    private LagerTableModel lagmodel2;
    private BELager lager = null;
    private static ProduktionForm instance = null;

    /**
     * Creates new form ProduktionForm
     */
    public ProduktionForm() throws Exception
    {
//        super(parent, modal);
        constructTables();
        selectOrder();
        centerTables();
        addEnterKeyListeners();
    }

    public static ProduktionForm getInstance() throws Exception
    {
        if (instance == null)
        {
            instance = new ProduktionForm();
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpFilter = new javax.swing.ButtonGroup();
        lblIgangvaerendeProduktion = new javax.swing.JLabel();
        jscrpProdOrdre = new javax.swing.JScrollPane();
        jtblVaelgOrdre = new javax.swing.JTable();
        lblVaelgOrdre = new javax.swing.JLabel();
        jscrpVaelgOrdre = new javax.swing.JScrollPane();
        jtblSortOrdre = new javax.swing.JTable();
        btnAfbyd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtEmployeeNo = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        txtLength = new javax.swing.JTextField();
        txtWidth = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblLager = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Belman Produktion");
        setFocusTraversalPolicyProvider(true);
        setMaximumSize(new java.awt.Dimension(1200, 800));
        setMinimumSize(new java.awt.Dimension(1200, 800));
        setName("Belman produktion"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 800));

        lblIgangvaerendeProduktion.setText("Choose an order to produce");

        jtblVaelgOrdre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jscrpProdOrdre.setViewportView(jtblVaelgOrdre);

        lblVaelgOrdre.setText("Orders matching material in guillotine");

        jtblSortOrdre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jscrpVaelgOrdre.setViewportView(jtblSortOrdre);

        btnAfbyd.setText("Close program");
        btnAfbyd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAfbydActionPerformed(evt);
            }
        });

        jLabel1.setText("Order job in");

        jtblLager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jtblLager);

        jLabel2.setText("Stock");

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pending", "In Production", "Finished" }));

        jLabel3.setText("EmployeeNo:");

        jLabel4.setText("Length:");

        jLabel5.setText("Width:");

        jLabel6.setText("Quantity:");

        jLabel7.setText("Status:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblIgangvaerendeProduktion, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jscrpProdOrdre, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 48, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnOk, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEmployeeNo)
                                .addComponent(jSeparator1)
                                .addComponent(txtLength)
                                .addComponent(txtWidth)
                                .addComponent(txtQuantity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblVaelgOrdre)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jscrpVaelgOrdre, javax.swing.GroupLayout.PREFERRED_SIZE, 899, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAfbyd)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEmployeeNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOk))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAfbyd))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblIgangvaerendeProduktion)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jscrpProdOrdre, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1)))
                        .addGap(18, 18, 18)
                        .addComponent(lblVaelgOrdre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jscrpVaelgOrdre, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAfbydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfbydActionPerformed
        dispose();
    }//GEN-LAST:event_btnAfbydActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        System.out.println("LOLOLOL");
    }//GEN-LAST:event_btnOkActionPerformed
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ProduktionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ProduktionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ProduktionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ProduktionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        </editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ProduktionForm().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAfbyd;
    private javax.swing.JButton btnOk;
    private javax.swing.ButtonGroup btngrpFilter;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JScrollPane jscrpProdOrdre;
    private javax.swing.JScrollPane jscrpVaelgOrdre;
    private javax.swing.JTable jtblLager;
    private javax.swing.JTable jtblSortOrdre;
    private javax.swing.JTable jtblVaelgOrdre;
    private javax.swing.JLabel lblIgangvaerendeProduktion;
    private javax.swing.JLabel lblVaelgOrdre;
    private javax.swing.JTextField txtEmployeeNo;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtWidth;
    // End of variables declaration//GEN-END:variables

    private void constructTables() throws Exception
    {
        initComponents();
        setLocationRelativeTo(this);


        lagmgr = new BLLLagerManager();
//        lagmodel = new GUI.produktion.LagerTableModel(lagmgr.visLager());
//        jtblLager.setModel(lagmodel);



        lagmgr = BLLLagerManager.getInstance();
        lagmgr.addObserver(this);
        lagmodel2 = new LagerTableModel(lagmgr.visLager());
        jtblLager.setModel(lagmodel2);

//        lagmgr = BLLLagerManager.getInstance();
//        lagmgr.addObserver(this);
//        lagmodel2 = new LagerTableModel(lagmgr.visLager());
//        jtblLager.setModel(lagmodel2);

        promgr = BLLProduktionManager.getInstance();
        promgr.addObserver(this);
        sortmodel = new SortOrdreTableModel(promgr.visOrdrer());
        jtblVaelgOrdre.setModel(sortmodel);
    }

    private void centerTables()
    {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        jtblVaelgOrdre.setDefaultRenderer(String.class, centerRenderer);
        jtblVaelgOrdre.setDefaultRenderer(Float.class, centerRenderer);
        jtblVaelgOrdre.setDefaultRenderer(int.class, centerRenderer);
        jtblVaelgOrdre.setDefaultRenderer(Date.class, centerRenderer);
        jtblSortOrdre.setDefaultRenderer(String.class, centerRenderer);
        jtblSortOrdre.setDefaultRenderer(Float.class, centerRenderer);
        jtblSortOrdre.setDefaultRenderer(int.class, centerRenderer);
        jtblSortOrdre.setDefaultRenderer(Date.class, centerRenderer);
        jtblLager.setDefaultRenderer(String.class, centerRenderer);
        jtblLager.setDefaultRenderer(Float.class, centerRenderer);
        jtblLager.setDefaultRenderer(int.class, centerRenderer);
    }

//    @Override
//    public void update(Observable o, Object arg) {
//        if (o instanceof BLLProduktionManager) {
//            try {
//                promodel.setCollection(promgr.visOrdrer());
//            } catch (Exception e) {
//            }
//        }
//    }
    private void selectOrder()
    {
        try
        {
            promgr = BLLProduktionManager.getInstance();
            promgr.addObserver(this);
            promodel = new ProduktionFormTableModel(promgr.visOrdrer());

            lagmgr = BLLLagerManager.getInstance();
            lagmgr.addObserver(this);
            lagmodel = new LagerTableModel(lagmgr.visLager());
            jtblVaelgOrdre.setModel(promodel);

            jtblLager.getSelectionModel().addListSelectionListener(new ListSelectionListener()
            {
                @Override
                public void valueChanged(ListSelectionEvent evt)
                {
                    sortmodel.clear();
                    int selectedStockRow = jtblLager.getSelectedRow();
                    BEProduktion p = promodel.getOrderByMaterial(selectedStockRow);
                    try
                    {
                        if (!promgr.getOrderByMaterial(p).isEmpty());
                        {
                            sortmodel = new SortOrdreTableModel(promgr.getOrderByMaterial(p));
                            jtblSortOrdre.setModel(sortmodel);
//                            jtblSortOrdre.getSelectionModel().addListSelectionListener(new ListSelectionListener()
//                            {
//                                @Override
//                                public void valueChanged(ListSelectionEvent evt)
//                                {
//                                    int selectedRow = jtblSortOrdre.getSelectedRow();
//                                    BEProduktion p = sortmodel.getOrderByMaterial(selectedRow);
//                                }
//                            });
                        }
                    }
                    catch (Exception e)
                    {
                        System.out.println("ERROR -" + e.getMessage());
                    }
                }
            });


            jtblVaelgOrdre.getSelectionModel().addListSelectionListener(new ListSelectionListener()
            {
                @Override
                public void valueChanged(ListSelectionEvent evt)
                {
                    sortmodel.clear();
                    int selectedRow = jtblVaelgOrdre.getSelectedRow();
                    jtblSortOrdre.getSelectionModel().clearSelection();
                    BEProduktion p = promodel.getOrderByRow(selectedRow);
                    clearFields();
                    lagmodel.clear();
                    txtEmployeeNo.setText("" + p.getEmployeeNo());
                    txtWidth.setText("" + p.getWidth());
                    txtLength.setText("" + p.getCoilLength());
                    txtQuantity.setText("" + p.getQuantity());

                    try
                    {
                        if (!promgr.getOrderByOrderMaterial(p).isEmpty());
                        {
                            sortmodel = new SortOrdreTableModel(promgr.getOrderByOrderMaterial(p));
                            jtblSortOrdre.setModel(sortmodel);
                            jtblSortOrdre.getSelectionModel().addListSelectionListener(new ListSelectionListener()
                            {
                                @Override
                                public void valueChanged(ListSelectionEvent evt)
                                {
                                    int selectedRow = jtblSortOrdre.getSelectedRow();
                                    BEProduktion q = sortmodel.getOrderByMaterial(selectedRow);
                                    clearFields();
                                    txtEmployeeNo.setText("" + q.getMaterialID());
                                    txtWidth.setText("" + q.getWidth());
                                    txtLength.setText("" + q.getCoilLength());
                                    txtQuantity.setText("" + q.getQuantity());
                                }
                            });
                        }
//                        int selectedRow = jtblVaelgOrdre.getSelectedRow();
//                        BELager l = lagmodel.getLagerByRow(selectedRow);
//                        if (!lagmgr.getLagerById(selectedRow).isEmpty());
//                        {
//                            lagmodel2 = new LagerTableModel(lagmgr.getLagerById(selectedRow));
//                            jtblLager.setModel(lagmodel2);
//                        }
                    }
                    catch (Exception e)
                    {
                        System.out.println("ERROR - Line 417 " + e.getMessage());
                    }
                }

                private void clearFields()
                {
                    txtEmployeeNo.setText("");
                    txtWidth.setText("");
                    txtLength.setText("");
                    txtQuantity.setText("");
                }
            });
        }
        catch (Exception e)
        {
            System.out.println("ERROR - Line 349 " + e.getMessage());
        }
    }

    private void addEnterKeyListeners()
    {
        KeyListener enterListener = new KeyAdapter()
        {
            @Override
            public void keyPressed(KeyEvent ke)
            {
                if (ke.getKeyCode() == KeyEvent.VK_ENTER)
                {
                    btnOk.doClick();
                }
            }
        };
        txtEmployeeNo.addKeyListener(enterListener);
        txtLength.addKeyListener(enterListener);
        txtWidth.addKeyListener(enterListener);
        txtQuantity.addKeyListener(enterListener);
    }

    @Override
    public void update(Observable o, Object arg)
    {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
